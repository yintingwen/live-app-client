<template>
  <swiper
    class="live-room"
    :vertical="true"
    :style="liveRoomLayout"
    :current="liveOpenIndex"
    :skip-hidden-item-layout="true"
    @change="onSwiperChange"
  >
    <swiper-item
      v-for="(item, index) in liveStore.liveSlideList"
      class="live-room-container"
      :key="item.id"
      :style="liveRoomLayout"
      @tap="onChatInputBlur"
    >
      <video
        v-if="liveOpenIndex === index"
        :id="`video-${item.id}`"
        :src="`http://121.62.18.249:8080/play/d87d13a23f71478cb5030170daae72d7.flv`"
        :controls="false"
        :style="liveRoomLayout"
        :autoplay="true"
        :is-live="true"
        :enable-progress-gesture="false"
        object-fit="cover"
        @tap="() => {}"
        @play="onVideoPlay($event, index)"
      ></video>
      <view class="">

      </view>
      <LiveRoomCover v-if="liveOpenIndex !== index || liveVideoLoading" />
      <LiveRoomFooter
        v-if="liveOpenIndex === index && !liveChatInputShow && !liveVideoLoading"
        class="bottom-fixed"
        @tapInput="onTapChat"
        @tapGift="onTapGift"
      />
      <LiveRoomCharRoom 
        v-if="liveOpenIndex === index && !liveVideoLoading" 
        :list="chatRoomList" 
      />
    </swiper-item>
  </swiper>
  <live-room-chat-input
    v-model:text="liveChatInputText"
    v-model:show="liveChatInputShow"
    ref="liveChatInputRef"
    @blur="onChatInputBlur(true)"
  />
  <u-popup 
    :show="giftListShow" 
    mode="bottom"  
    @close="() => giftListShow = false" 
  >
    <view>
      {{ JSON.stringify(liveStore.giftList) }}
    </view>
	</u-popup>
  <view v-if="liveRoomShowAnimation" class="live-room-animation" :style="liveRoomLayout">
    <l-svga></l-svga>
  </view>
</template>

<script setup>
import { getLiveRoomInfo } from '@apis/live'
import { useSystemStore } from '@stores/system'
import { computed, ref } from 'vue'
import { onLoad } from '@dcloudio/uni-app'
import LiveRoomChatInput from './components/LiveRoomChatInput'
import LiveRoomCharRoom from './components/LiveRoomChatRoom/index.vue'
import LiveRoomCover from './components/LiveRoomCover'
import LiveRoomFooter from './components/LiveRoomFooter'
import { useLiveStore } from '@/stores/live'
import { debounce } from '@utils/common'
import WebsocketClient from '@utils/websocketClient/WebsocketClient'

const systemStore = useSystemStore()
const liveStore = useLiveStore()

const chatRoomList = ref([
  { text: '撒带教案数据库', level: 1, name: '1' },
  { text: '撒带教案数据库', level: 1, name: '1' },
  {
    text: '撒带教案数撒带教案数据库撒带撒带教案数撒带教案数据库撒带教案数据库撒带教案数据库撒带教案数据库撒带教案数据库撒带教案数据库撒带教案数据库据库教案数据库撒带教案数据库撒带教案数据库撒带教案数据库据库',
    level: 1,
    name: '1',
  },
  { text: '撒带教案数据库', level: 1, name: '1' },
  { text: '撒带教案数据库', level: 1, name: '1' },
  { text: '撒带教案数据库', level: 1, name: '1' },
  { text: '撒带教案数据库', level: 1, name: '1' },
  { text: '撒带教案数据库', level: 1, name: '1' },
  { text: '撒带教案数据库', level: 1, name: '1' },
])
const liveChatRoomScrollOpen = ref(false)
const liveOpenIndex = ref(0)
const liveVideoLoading = ref(false)
const liveChatInputShow = ref(false)
const liveChatInputRef = ref(null)
const liveChatInputText = ref('')
const liveRoomShowAnimation = ref(false)
const liveRoomInfo = ref({})
const giftListShow = ref(false)

// 单个直播间的布局
const liveRoomLayout = computed(() => ({
  height: systemStore.screenHeight + 'px',
  width: '750rpx',
}))

onLoad(() => {
  liveStore.getGiftList()
  createWSConnection()
  getRoomInfo()
})

// video 播放事件
function onVideoPlay(e) {
  liveVideoLoading.value = false
}
// swpie 切换事件
function onSwiperChange(e) {
  const { current } = e.detail
  liveRoomChange(current)
}
// 直播间切换函数
const liveRoomChange = debounce((index) => {
  liveVideoLoading.value = true
  liveOpenIndex.value = index
  getRoomInfo()
}, 0)
// 点击说点什么
function onTapChat() {
  liveChatInputShow.value = true
}
// 聊天输入框失去焦点
function onChatInputBlur(isEmit) {
  liveChatInputShow.value = false
  liveChatRoomScrollOpen.value = false
}
function onTapGift() {
  giftListShow.value = true
}
function createWSConnection() {
  const liveInfo = liveStore.liveSlideList[liveOpenIndex.value]
  console.log(`ws://${liveInfo.socketAddr}:${liveInfo.socketPort}`);
  const ws = new WebsocketClient({
    url: `ws://${liveInfo.socketAddr}:${liveInfo.socketPort}`
  })
  ws.on('open', () => {
    console.log('open')
  })
  ws.on('message', (data) => {
    console.log('message', data)
  })
  ws.on('close', () => {
    console.log('close')
  })
  ws.on('error', () => {
    console.log('error')
  })
}

async function getRoomInfo (id) {
  const liveRoom = liveStore.liveSlideList[liveOpenIndex.value]
  const data = await getLiveRoomInfo({ roomid: id || liveRoom.id })
  liveRoomInfo.value = data.userInfo
}
</script>
<style lang="scss" scoped>
.bottom-fixed {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 750rpx;
}
.live-room {
  // flex: 1;
  position: relative;

  .live-room-container {
    position: relative;
    background-color: #fff;
  }
}

.live-room-animation {
  position: fixed;
  top: 0;
  left: 0;
}
</style>
