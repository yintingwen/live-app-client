<template>
  <list
    :id="listId"
    class="live-room"
    :style="liveRoomLayout"
    :pagingEnabled="true"
    :offset-accuracy="1"
    :show-scrollbar="false"
	  :fixFreezing="true"
    @scroll="onListScroll"
  >
    <cell
      v-for="(item, index) in liveRoomRenderList"
      class="live-room-container"
      :key="item.id"
      :style="liveRoomLayout"
      @appear="onLiveRoomAppear($event, item, index)"
      @disappear="onliveRoomDisappear($event, item, index)"
      @tap="onChatInputBlur(false)"
    >
        <video
          v-if="liveOpenIndex === index"
          :id="`video-${item.id}`"
          :src="`http://121.62.18.249:8080/play/ad3cf639c6cb43789c4a7db5edbc9776.flv`"
          :controls="false"
          :style="liveRoomLayout"
          :autoplay="liveOpenIndex === index"
          :is-live="true"
          :enable-progress-gesture="false"
          object-fit="cover"
          @tap="() => {}"
          @play="onVideoPlay($event, index)"
        ></video>
       <image
          v-if="liveOpenIndex !== index || liveVideoLoading"
          mode="aspectFill"
          src="https://profile.csdnimg.cn/D/5/0/1_luoluoyang23"
          :style="liveRoomLayout"
          class="live-room-page"
        ></image>
        <view v-if="!liveChatInputShow" class="live-room-footer bottom-fixed">
          <view class="footer-operation">
            <view class="footer-input" @tap.stop="onTapChat">
              <image
                class="footer-input-icon"
                src="/static/images/live-room/chat_icon.png"
                mode="scaleToFill"
              />
              <text class="footer-input-text">说点什么...</text>
            </view>
            <view class="footer-button">2</view>
          </view>
          <u-safe-bottom></u-safe-bottom>
        </view>
        <LiveRoomCharRoom 
          v-if="liveOpenIndex === index" 
          ref="liveChatRoomRef"
          :style="liveRoomChatStyle"
          @touchstart.stop="onChatRoomTouchStart"
          @loadmore="onChatRoomLoadMore"
        />
    </cell>
  </list>
  <live-room-chat-input
    v-model:text="liveChatInputText"
    v-model:show="liveChatInputShow"
    ref="liveChatInputRef"
    @blur="onChatInputBlur(true)"
  />
  <view v-if="liveRoomShowAnimation" class="live-room-animation" :style="liveRoomLayout">
    <l-svga ></l-svga>
  </view>
</template>

<script setup>
import { userSystemStore } from '@stores/system'
import { computed, ref } from 'vue'
import LiveRoomChatInput from './components/LiveRoomChatInput'
import LiveRoomCharRoom from './components/LiveRoomChatRoom'
import { useLiveStore } from '@/stores/live'
import { debounce } from '@utils/common'

const systemStore = userSystemStore()
const liveStore = useLiveStore()

let liveShowIndex = 0
let appearDirection = ''
let liveRoomChatBastBottom = (systemStore.screenWidth / 750) * 168


const listId = ref('live-room-list')

const liveChatRoomRef = ref(null)
const liveChatRoomScrollOpen = ref(false)
const liveChatRoomScroll = ref(null)

const liveOpenIndex = ref(0)
const liveVideoLoading = ref(false)
const liveChatInputShow = ref(false)
const liveChatInputRef = ref(null)
const liveChatInputText = ref('')
const liveChatRoomBottom = ref(liveRoomChatBastBottom)
const liveRoomShowAnimation = ref(false)

// 单个直播间的布局
const liveRoomLayout = computed(() => {
  return {
    height: systemStore.screenHeight + 'px',
    width: '750rpx',
  }
})
const liveRoomRenderList = computed(() => {
  const endIndex = liveChatRoomScrollOpen.value ? liveOpenIndex.value + 1 : liveStore.liveSlideList.length
  return liveStore.liveSlideList.slice(0, endIndex)
})
const liveRoomChatStyle = computed(() => ({
  bottom: liveChatRoomBottom.value + 'px', 
  position: 'fixed'
}))

// video 播放事件
function onVideoPlay(e) {
  liveVideoLoading.value = false
  liveChatRoomBottom.value = liveRoomChatBastBottom
}
// 直播间出现事件
function onLiveRoomAppear(e, item, index) {
  liveShowIndex = index
  appearDirection = e.direction
}
// 直播间消失事件
function onliveRoomDisappear(e, item, index) {
  liveRoomChange(e, item, index)
}
// 直播间切换函数
const liveRoomChange = debounce((e, item, index) => {
  if (appearDirection !== e.direction || liveShowIndex === liveOpenIndex.value) return

  liveVideoLoading.value = true
  liveOpenIndex.value = liveShowIndex
}, 0)
// 点击聊天
function onTapChat() {
  liveChatInputShow.value = true
}
function onChatInputBlur(isEmit) {
  liveChatInputShow.value = false
  liveChatRoomScrollOpen.value = false
  liveChatRoomRef.value[0].clearSetSpecialEffects()
  console.log(liveRoomChatStyle.value.position);
  console.log('?');
}

function onLiveRoomTouchStart () {
  console.log('onLiveRoomTouchStart');
}

function onListScroll (e) {
  liveChatRoomBottom.value = (Math.abs(e.contentOffset.y) - systemStore.screenHeight * liveOpenIndex.value) + liveRoomChatBastBottom
}

function onChatRoomTouchStart () {
  console.log('onChatRoomTouchStart');
  // liveChatRoomRef.value[0].setSpecialEffects(listId.value)
}

function onChatRoomLoadMore (e) {
  console.log(e);
}
</script>
<style lang="scss" scoped>
.bottom-fixed {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 750rpx;
}
.live-room {
  // flex: 1;
  position: relative;

  .live-room-container {
    position: relative;
    background-color: #fff;
  }

  .live-room-page {
    position: absolute;
    top: 0;
    left: 0;
  }
}

.live-room-footer {
  padding: 54rpx 20rpx 40rpx;

  .footer-operation {
    color: #fff;
    display: flex;
    flex-direction: row;
    justify-content: space-between;

    .footer-input {
      background-color: rgba(0, 0, 0, 0.3);
      padding: 20rpx 50rpx 20rpx 20rpx;
      border-radius: 37rpx;
      display: flex;
      flex-direction: row;
      align-items: center;

      .footer-input-icon {
        height: 36rpx;
        width: 36rpx;
        margin-right: 18rpx;
      }

      .footer-input-text {
        color: #fff;
        font-size: 24rpx;
        line-height: 34rpx;
      }
    }

    .footer-button {
      background-color: salmon;
    }
  }
}
.live-room-animation {
	position: fixed;
	top: 0;
	left: 0;
}
</style>
